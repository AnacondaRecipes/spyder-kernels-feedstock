{% set name = "spyder-kernels" %}
{% set version = "3.0.2" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://github.com/spyder-ide/spyder-kernels/archive/refs/tags/v3.0.2.tar.gz
  sha256: 4620b8724fc83c7c99f5cb923f0b58fbb2f08d52bdf9dce3d6bdd84be4e8540b

build:
  skip: true  # [py<38]
  number: 0
  script: {{ PYTHON }} -m pip install . --no-deps --no-build-isolation --ignore-installed -v

requirements:
  build:
  # Required to handle git source. See issue [#4882](https://github.com/conda/conda-build/issues/4882)
    - git  # [not win]
  host:
    - pip
    - python
    - setuptools
    - wheel
    # - blas =*=openblas  # [osx]
  run:
    - python
    - cloudpickle
    - ipykernel >=6.29.3,<7
    - ipython >=8.12.2,<8.13 # [py==38]
    - ipython >=8.13.0,<9,!=8.17.1 # [py>38]
    - jupyter_client >=7.4.9,<9.0.0
    - pyzmq >=24.0.0
    - wurlitzer >=1.0.3  # [not win]
    - pyxdg >=0.26  # [linux]

test:
  source_files:
    - spyder_kernels
  imports:
    - spyder_kernels
    - spyder_kernels.comms
    - spyder_kernels.console
    - spyder_kernels.customize
    - spyder_kernels.utils
  requires:
    - pip
    - flaky
    - mock
    - numpy
    - pandas
    - pytest
    - pytest-cov
    - scipy
    - xarray
    - pillow
    - django
    - h5py
    # - blas =*=openblas  # [osx]
  commands:
    - pip check
    # Verified test_console_kernel.py works locally but requires interactive settings so skipping on CI
    # Skipping test_matplotlib_inline because it is a flaky test
    - pytest -vv spyder_kernels --ignore=spyder_kernels/console/tests/test_console_kernel.py -k "not (test_load_dicom_files or test_matplotlib_inline)"

about:
  home: https://www.spyder-ide.org/
  license: MIT
  license_family: MIT
  license_file: LICENSE.txt
  summary: Jupyter kernels for Spyder's console
  description: |
    Provides Jupyter kernels for use with the consoles of Spyder, the
    Scientific Python Development Environment. These can launched either
    through Spyder itself or in an independent Python session, and allow for
    interactive or file-based execution of Python code in different
    environments, all inside the IDE.
    For more on Spyder, visit https://www.spyder-ide.org/
    To learn about creating, connecting and using Spyder's consoles, read:
    https://docs.spyder-ide.org/ipythonconsole.html
    For advice on managing packages and environments with Spyder, see:
    https://github.com/spyder-ide/spyder/wiki/Working-with-packages-and-environments-in-Spyder
  doc_url: https://docs.spyder-ide.org/current/index.html
  dev_url: https://github.com/spyder-ide/spyder-kernels

extra:
  recipe-maintainers:
    - ccordoba12
    - dalthviz